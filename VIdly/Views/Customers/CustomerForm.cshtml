@model Vidly.ViewModels.CustomerFormViewModel

@{
    var newEditText = Model.Customer.Id == 0 ? "New" : "Edit";
    ViewBag.Title = newEditText;
}


<h2>@(newEditText) Customer</h2>

@using (Html.BeginForm("Save", "Customers"))
{
    @Html.ValidationSummary(true, "Please fix the following errors:")
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipOptions, "Id", "Name"), "Select Membership Type", new { @class = "form-control js-membership-type" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>
    <div class="form-group date">
        @Html.LabelFor(m => m.Customer.BirthDate)
        @Html.TextBoxFor(m => m.Customer.BirthDate, "{0:dd/MM/yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.BirthDate)
        @Html.ValidationMessage("customerageformembership")  @* uses our custom jq validation from custom validation attribute *@
    </div>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsletter) Subscribe To Newsletter?
        </label>
    </div>
    @Html.HiddenFor(m => m.Customer.Id)
    @Html.AntiForgeryToken()

    <a href="@Request.UrlReferrer" class="btn btn-default">
        <span class="glyphicon glyphicon-remove-circle"></span> Cancel
    </a>
    <button type="submit" class="btn btn-primary">
        <span class="glyphicon glyphicon-ok-circle"></span> Save
    </button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}